{"version":3,"sources":["components/about.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["About","className","src","alt","href","rel","target","aria-hidden","Component","Projects","style","margin","col","this","genCard","projName","txt","link","shadow","minWidth","background","color","height","fontFamily","border","colored","Main","App","title","scroll","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0QAwDeA,E,iLAnDP,OACI,yBAAKC,UAAU,SACX,yBACIC,IAAI,kEACJC,IAAI,WACJF,UAAU,iBAGd,yBAAKA,UAAU,aACX,wBAAIA,UAAU,QAAO,yDACrB,wBAAIA,UAAU,cAAa,6EAC3B,6BACA,wBAAIA,UAAU,UAAS,yIAEvB,yBAAKA,UAAU,gBACX,uBAAGG,KAAK,yDACJC,IAAI,sBAAsBC,OAAO,UACjC,uBAAGL,UAAU,wBAAwBM,cAAY,UAGrD,uBAAGH,KAAK,qCACJC,IAAI,sBAAsBC,OAAO,UACjC,uBAAGL,UAAU,sBAAsBM,cAAY,UAGnD,uBAAGH,KAAK,+BACJC,IAAI,sBAAsBC,OAAO,UACjC,uBAAGL,UAAU,wBAAwBM,cAAY,YAK7D,yBAAKN,UAAU,OACX,2BAAG,uf,GApCHO,aCkELC,E,iLA9DP,OACI,yBAAKR,UAAU,YAEX,6BACI,wBAAIA,UAAU,kBAAiB,4CAGnC,yBAAKS,MAAO,CAACC,OAAQ,SAErB,kBAAC,OAAD,KACI,kBAAC,OAAD,CAAMC,IAAK,IACP,yBAAKX,UAAU,iBACVY,KAAKC,QAAQ,qCAAsC,mBACpD,2FACA,+CAECD,KAAKC,QAAQ,0CAA2C,gBACzD,oJACA,oDAECD,KAAKC,QAAQ,0CAA2C,mBACzD,6GACA,sDAGR,kBAAC,OAAD,KACI,yBAAKJ,MAAO,CAACC,OAAQ,UAEzB,kBAAC,OAAD,CAAMC,IAAK,IACP,yBAAKX,UAAU,iBACVY,KAAKC,QAAQ,yCAA0C,oBACxD,8DACA,mDAECD,KAAKC,QAAQ,uCAAwC,wBACtD,yJACA,e,8BAQhBZ,EAAKa,EAAUC,EAAKC,GACxB,OACI,kBAAC,OAAD,CAAMC,OAAQ,EAAGR,MAAO,CAACS,SAAU,QAASR,OAAQ,SAChD,kBAAC,YAAD,CAAWD,MAAO,CAACU,WAAYlB,EAAKmB,MAAO,QAASC,OAAQ,WAE5D,kBAAC,WAAD,CAAUZ,MAAO,CAACY,OAAQ,UACtB,wBAAIZ,MAAO,CAACW,MAAO,QAASE,WAAW,YAAaR,GACnDC,GAEL,kBAAC,cAAD,CAAaQ,QAAM,GACf,kBAAC,SAAD,CAAQC,SAAO,EAACnB,OAAO,SAASF,KAAMa,GAAtC,gB,GAzDGT,aCURkB,EATF,kBACT,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCkBOC,MAnBf,WACE,OACE,yBAAK1B,UAAU,oBACb,kBAAC,SAAD,KACE,kBAAC,SAAD,CAAQ2B,MAAM,kBAAkB3B,UAAU,SAAS4B,QAAM,GACrD,kBAAC,aAAD,KACI,uBAAGzB,KAAK,KAAR,UACA,uBAAGA,KAAK,KAAR,YACA,uBAAGA,KAAK,KAAR,cAGR,kBAAC,UAAD,CAASH,UAAU,YACf,kBAAC,EAAD,UCNQ6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b8af49cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass About extends Component {\n\n    render() {\n        return (\n            <div className=\"about\">\n                <img\n                    src=\"https://webstockreview.net/images/male-clipart-masculine-16.png\"\n                    alt=\"Shashank\"\n                    className=\"shashank-pic\"\n                />\n            \n                <div className=\"my-header\">\n                    <h1 className=\"name\"><font>SHASHANK&nbsp;&nbsp;MAHESH</font></h1>\n                    <h4 className=\"university\"><font>University of Illinois at Urbana-Champaign</font></h4>\n                    <hr />\n                    <h4 className=\"skills\"><font>Java &nbsp;|&nbsp; Python &nbsp;|&nbsp; C &nbsp;|&nbsp; SQL &nbsp;|&nbsp; HTML / CSS &nbsp;|&nbsp; ReactJS &nbsp;|&nbsp; Swift</font></h4>\n                    \n                    <div className=\"social-links\">\n                        <a href=\"https://www.linkedin.com/in/shashank-mahesh-5a7708193/\"\n                            rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                        </a>\n\n                        <a href=\"https://github.com/Shashank-Mahesh\"\n                            rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                        </a>\n\n                        <a href=\"mailto:smahesh3@illinois.edu\"\n                            rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-envelope-square\" aria-hidden=\"true\" />\n                        </a>\n                    </div>\n                </div>\n\n                <div className=\"bio\">\n                    <p><font>\n                    Hi I'm Shashank!\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n                    et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi\n                    ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum\n                    dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                    deserunt mollit anim id est laborum.\n                    </font></p>\n                </div>\n\n                \n\n            </div>            \n        )\n    }\n\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { Grid, Card, CardTitle, CardText, CardActions, Button, Cell } from 'react-mdl';\n\nclass Projects extends Component {\n\n    render() {\n        return (\n            <div className=\"projects\">\n\n                <div>\n                    <h1 className=\"projects-title\"><font>Projects</font></h1>\n                </div>\n\n                <div style={{margin: '5em'}}></div>\n\n                <Grid>\n                    <Cell col={12}>\n                        <div className=\"projects-grid\">\n                            {this.genCard('url(\"sifa-app.jpg\") center / cover', \"SIFA Android app\",\n                            \"Designed an Android app for SIFA (South India Fine Arts); webiste-southindiafinearts.org\",\n                            \"https://github.com/Shashank-Mahesh/SIFA-app\")}\n\n                            {this.genCard('url(\"emergenspeech.png\") center / cover', \"Emergenspeech\",\n                            \"An Android app that uses speech-recognition to provide medical help for someone who has just had a medical emergency before Medical help arrives.\",\n                            \"https://github.com/Shashank-Mahesh/Emergenspeech\")}\n\n                            {this.genCard('url(\"factorfiction.png\") center / cover', \"Fact or Fiction?\",\n                            \"An Android app that uses AI and other algorithms to help users determine the credibility of a news source.\",\n                            \"https://github.com/Shashank-Mahesh/Emergenspeech\")}\n                        </div>\n                    </Cell>\n                    <Cell>\n                        <div style={{margin: '4em'}}></div>\n                    </Cell>\n                    <Cell col={12}>\n                        <div className=\"projects-grid\">\n                            {this.genCard('url(\"towerdefense.jpg\") center / cover', \"Tower Defense 2.0\",\n                            \"A game much like Bloons Tower Defense reddesigned in JavaFX\",\n                            \"https://github.com/Shashank-Mahesh/TowerDefense\")}\n\n                            {this.genCard('url(\"automation.jpg\") center / cover', \"Home Automation Model\",\n                            \"Developed a home automation system to control various home appliances using machine learning algorithms. Used a Raspberry Pi to model home appliances.\",\n                            \"/site\")}\n                        </div>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n\n    genCard(src, projName, txt, link) {\n        return (\n            <Card shadow={5} style={{minWidth: '320px', margin: 'auto'}}>\n                <CardTitle style={{background: src, color: 'black', height: '350px'}}>\n                </CardTitle>\n                <CardText style={{height: '150px'}}>\n                    <h4 style={{color: 'black', fontFamily:'verdana'}}>{projName}</h4>\n                    {txt}\n                </CardText>\n                <CardActions border>\n                    <Button colored target=\"_blank\" href={link}>GitHub</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n\n}\n\nexport default Projects;","import React from 'react';\nimport About from \"./about\";\nimport Projects from './projects';\n\nconst Main = () => (\n    <div>\n        <About />\n        <Projects />\n    </div>\n\n    \n)\n  \nexport default Main;","import React from 'react';\nimport './App.css';\n\nimport { Layout, Header, Navigation, Content } from 'react-mdl';\nimport Main from './components/main';\n\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n      <Layout>\n        <Header title=\"Shashank Mahesh\" className=\"header\" scroll>\n            <Navigation>\n                <a href=\"/\">Resume</a>\n                <a href=\"/\">Projects</a>\n                <a href=\"/\">About Me</a>\n            </Navigation>\n        </Header>\n        <Content className=\"main-div\">\n            <Main/>\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}